generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:admin@localhost:5432/mz?schema=public"
  // "postgresql://postgres:1234@localhost:5432/postgres?schema=public"
}

model budget_request {
  id            Int      @id @default(autoincrement())
  responsavel   String
  cpf_cnpj      String?
  local_evento  String
  servicos      String[]
  data_evento   DateTime
  telefone      String
  tipo_evento   String?
  email         String?
  descricao     String
  data_cadastro DateTime @default(now())
  budget_created Boolean @default(false)

  Budget Budget[]
}

model EquipmentsPlan {
  id            Int          @id @default(autoincrement())
  amount    Int          // Armazena a quantidade de cada equipamento no plano
  sound_plan_id    Int          // Foreign Key para PlanoSom
  equipment_id Int          // Foreign Key para Equipamento

  soundPlan      SoundPlans   @relation(fields: [sound_plan_id], references: [id]) // Relacionamento com PlanoSom
  equipments    Equipment     @relation(fields: [equipment_id], references: [id]) // Relacionamento com Equipamento

  @@unique([sound_plan_id, equipment_id]) // Garante que um equipamento só possa ser associado uma vez por plano
  @@map("equipments_plan")

}


model SoundPlans {
  id            Int         @id @default(autoincrement())
  name          String
  valor_plano   Decimal     @db.Decimal(10, 2)

  Budget Budget[]
  equipmentsPlan EquipmentsPlan[]  // Relação com a tabela intermediária


  @@map("sound_plans")
}

model Budget {
  id            Int         @id @default(autoincrement())
  responsavel   String
  cpfCnpj       String?
  localEvento   String
  servicos      String[]
  dataEvento    DateTime
  telefone      String
  tipoEvento    String?
  email         String?
  descricao     String
  soundPlanId   Int?
  soundPlans    SoundPlans? @relation(fields: [soundPlanId], references: [id])
  observacoes   String
  data_cadastro DateTime    @default(now())
  solicitacaoId   Int?       // Campo para associar à solicitação
  budget_request   budget_request? @relation(fields: [solicitacaoId], references: [id]) // Relacionamento com solicitação

  @@map("budget")
}

model Department {
  id         Int          @id @default(autoincrement())
  name       String
  equipments Equipment[]

  @@map("departments")
}

model Equipment {
  id           Int        @id @default(autoincrement())
  name         String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  amount       Int
  equipmentsPlan EquipmentsPlan[]  // Relação com a tabela intermediária

  @@map("equipments")
}

model File {
  id        Int      @id @default(autoincrement())
  name      String
  url       String
  createdAt DateTime @default(now())
}
